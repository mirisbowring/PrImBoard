/*
 * PrImBoard
 *
 * PrImBoard (Private Image Board) can be best described as an image board for all the picures and videos you have taken. You can invite users to the board and share specific images with them or your family members!
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/v1/",
		Index,
	},

	Route{
		"AddEvent",
		strings.ToUpper("Post"),
		"/api/v1/event",
		AddEvent,
	},

	Route{
		"DeleteEevntById",
		strings.ToUpper("Delete"),
		"/api/v1/event/{id}",
		DeleteEevntById,
	},

	Route{
		"GetEventById",
		strings.ToUpper("Get"),
		"/api/v1/event/{id}",
		GetEventById,
	},

	Route{
		"UpdateEventById",
		strings.ToUpper("Put"),
		"/api/v1/event/{id}",
		UpdateEventById,
	},

	Route{
		"AddMedia",
		strings.ToUpper("Post"),
		"/api/v1/media",
		AddMedia,
	},

	Route{
		"DeleteMediaById",
		strings.ToUpper("Delete"),
		"/api/v1/media/{id}",
		DeleteMediaById,
	},

	Route{
		"GetMediaById",
		strings.ToUpper("Get"),
		"/api/v1/media/{id}",
		GetMediaById,
	},

	Route{
		"UpdateMediaById",
		strings.ToUpper("Put"),
		"/api/v1/media/{id}",
		UpdateMediaById,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/api/v1/user",
		CreateUser,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/api/v1/user/{username}",
		DeleteUser,
	},

	Route{
		"GetUserByName",
		strings.ToUpper("Get"),
		"/api/v1/user/{username}",
		GetUserByName,
	},

	Route{
		"LoginUser",
		strings.ToUpper("Get"),
		"/api/v1/user/login",
		LoginUser,
	},

	Route{
		"LogoutUser",
		strings.ToUpper("Get"),
		"/api/v1/user/logout",
		LogoutUser,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/api/v1/user/{username}",
		UpdateUser,
	},

	Route{
		"AddUserGroup",
		strings.ToUpper("Post"),
		"/api/v1/usergroup",
		AddUserGroup,
	},

	Route{
		"DeleteUserGroupById",
		strings.ToUpper("Delete"),
		"/api/v1/usergroup/{id}",
		DeleteUserGroupById,
	},

	Route{
		"GetUserGroupById",
		strings.ToUpper("Get"),
		"/api/v1/usergroup/{id}",
		GetUserGroupById,
	},

	Route{
		"UpdateUserGroupById",
		strings.ToUpper("Put"),
		"/api/v1/usergroup/{id}",
		UpdateUserGroupById,
	},
}
